[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Chantan’s Quarto Website",
    "section": "",
    "text": "This website will be used to turn in assignments for the following courses:"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Chantan’s Quarto Website",
    "section": "",
    "text": "This website will be used to turn in assignments for the following courses:"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "My Blog",
    "section": "",
    "text": "DataFramed Podcast Ep 318 Review\n\n\n\nEPPS 6302\n\n\n\nReview and Thoughts on DataFramed Episode 318 with Guest Klaus Kleinfield.\n\n\n\nChantan Morin Jr\n\n\nSep 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLiterate Programming and Reviewing Malinowski’s Music Visualization\n\n\n\nEPPS 6356\n\n\n\nNotes on Bower’s ‘HOW TO IMPROVE YOUR RELATIONSHIP WITH YOUR FUTURE SELF’ and reviewing Stephen Malinowski’s visualization of Chopin’ Ballade no. 1 in G minor (opus 23)\n\n\n\nChantan Morin Jr\n\n\nOct 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntest blog\n\n\n\nEPPS 6356\n\n\n\ndescription\n\n\n\nChantan Morin Jr\n\n\nOct 9, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/10-09-24-prepareforclass7-post/index.html",
    "href": "blog/10-09-24-prepareforclass7-post/index.html",
    "title": "Literate Programming and Reviewing Malinowski’s Music Visualization",
    "section": "",
    "text": "Notes on Literate Programming\nPeople tend to forget things very quickly and easily. Because of this, one will forget why they made a certain decision when analyzing the data or when designing their research. The solution to this is to make data analysis quickly and easily reproduceable. When publishing, the research needs to be able to be replicated and reproduced if another wants to re-examine the conclusions made in the original publishing.\nPart of making data reproducible is making sure the reader of the research or code is able to know why some decision was made, communicating with the reader about why you decided to do something in the analysis rather than something else. This can be done by writing comments in the code. Comment liberally! Comments will be left alone when running code, so feel free to write as many you feel necessary. Another aspect of using comments is called literate programming. Literate programming is done by putting your code into the document paper along with the plot it creates. For instance, this can be done using R Markdown. This will better give better context to the code used than just comments alone, and thus makes the communication between analyst and reader clearer.\nA further note: DO NOT use setwd() for codes that are meant to be shared in the future or to others. This forces someone in the future using the data to edit the working directory to meet their needs. Using commands like load() or read.csv() instead, and have the source of the data easy to find. Further, how you clean data and the how you create the graphics with the cleaned data should be two separate .R documents. This is common practice.\n\n\nMalinowski’s Music Visualization Review\nVideo: \nThe color used in this visualization are chosen by Malinowski’s “Harmonic Coloring” method. Blue signifies the tonic, or “home pitch”, basically the most important note within the music’s chosen key. The redder a note is, the more away it is from this tonic. This coloring stays consistent with the entire piece. When one looks at the colors as a whole, one will notice that some sections of the piece are “more blue” while other sections are “more red”. This is most evident at 4:42 and again at 5:50. This shows a key/tone change in the piece. In this piece, there is technically no key change, however, there are points in the piece where there are significantly more notes played outside the piece’s chose scale, or more away from the tonic. This blue-to-red shows this change in the piece.\nAnother consistent part of this visualization is how the note’s length and volume are represented. The length of the note is generally represented by how long the symbol is. There are some symbols that do not really have a length, like the “dots” that appear in 2:37 and the “swipes” that appear in 3:16. The dots represent a quick succession of notes played in staccato (shortly and quickly), and thus by definition have a very short length which can be easily expressed and understood as a dot (even in music a staccato is symbolized by a dot on top of a note). The swipes note length is symbolized by the “crescent” that comes out in the direction of the swipe towards the next note in the phrase. The volume of a note is represented by the width of the symbol. If the symbol is directly connected to another symbol, this means that the second note is played immediately after the note connected to it, without any “rest”.\nFinally, there are different symbols used throughout the piece. Generally, if there is a dramatic symbol change, it means that the piece is using a new melody. For instance, the beginning of the first melody is technically at 0:44, represented by the notes symbolized by the “lens” (the round shape at is thinner at the ends). This melody appears again at 4:45 in a different key and 7:22 in a faster tempo, symbolized the same way. The second main melody appears at 3:29 with a new symbol, the aforementioned “swipes”. These appear again at 5:14 in a different key and 6:52, symbolized the same way. Both these melodies are usually accompanied by their own harmony, an oval with a white line for the lens melody and a solid color oval for the swipes melody. This is not always the case, though, like in 7:22, the lens melody plays with the swipe’s harmony, until around 8:00 where the lens melody plays with its respective harmony. There is a brief unique melody played at 2:14, symbolized by “pins”, which only appears once. The aforementioned “dots” appear at 2:37, 5:53, 8:34, again representing a rapid succession of staccato notes. They appear out of nowhere and disappear quicker than the rest of the notes in the visualization, possibly mimicking the erratic and quick nature of the phrase. Finally, at 9:56, there are square symbols that only appear here to conclude the piece. These squares were likely uniquely used here to represent both hands of the pianist playing the exact same chromatic scale at the exact same time, which happens no where else in the piece. The rolling square animation to symbolize the “fall” to the next note also brings to mind the “steps” of a chromatic scale, making the visualization represent the feeling of the music like the “dots” did.\nIn all, this visualization is able to capture the feeling of the piece and call backs to certain melodies with its great use of symbol shapes, and the reader can easily follow along which notes are played and when the key changes depending on the color."
  },
  {
    "objectID": "assignment7.html",
    "href": "assignment7.html",
    "title": "Assignment 7",
    "section": "",
    "text": "Return Home\nTest"
  },
  {
    "objectID": "assignment7.html#code",
    "href": "assignment7.html#code",
    "title": "Assignment 7",
    "section": "Code",
    "text": "Code\n\n# Call data\ndata &lt;- read.csv(\"CleanProjectData.csv\")\ndata.short &lt;- data[, c(5,6,13,14,19)]\ndata.var &lt;- data[,c(13,14)]\nregion_choices &lt;- c(\"All\", data.short$Region)\n\n# App UI\nui &lt;- fluidPage(\n  tags$style(HTML(\"\n    body {\n      background-color: #b3b3b3;\n      color: black;\n    }\n    \n    .shiny-input-container {\n      color: black;\n    }\"\n  )),\n  \n  titlePanel(\"Assignment 7\"), \n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"plotType\", \"Choose Plot Type:\", \n                  choices = c(\"Histogram\", \"Scatterplot\", \"Bubble Chart\"), selected = \"Histogram\"),\n      uiOutput(\"variable_ui\"),\n    ), \n    \n    mainPanel(\n      plotOutput(\"distPlot\")\n    )\n  )\n)\n\n\n# App Server\nserver &lt;- function(input, output) {\n  \n  output$variable_ui &lt;- renderUI({\n    switch(input$plotType,\n           \"Histogram\" = sliderInput(\"bins\",\"Number of Bins:\",\n                                     min = 1, max = 50, value = 30),\n           \"Scatterplot\" = tagList(\n             selectInput(\"variable\", \"Choose Variable:\", choices = names(data.var)),\n             selectInput(\"txregion\", \"Select Region:\", choices = region_choices)), \n           \"Bubble Chart\" = tagList(\n             selectInput(\"txregion\", \"Select Region:\", choices = region_choices)),\n    )\n  })\n  \n  output$distPlot &lt;- renderPlot({\n    req(input$plotType)\n    \n    if (input$plotType == \"Histogram\" && !is.null(input$bins)) {\n      x &lt;- data$MedianHouseholdIncome\n      bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)\n      return(hist(x, breaks = bins, col = 'navy', border = 'white',\n                  xlab = 'Median Household Income',\n                  main = 'Histogram of Median Household Income'))\n    }\n    \n    if (input$plotType == \"Scatterplot\" && !is.null(input$variable) && !is.null(input$txregion)) {\n      variable &lt;- input$variable\n      region &lt;- input$txregion\n      filtered_data &lt;- if (region == \"All\") {data.short} else {data.short[data.short$Region == region, ]}\n      return(ggplot(filtered_data, aes_string(x = variable, y = \"VoterTurnoutRate\", fill = \"Region\")) +\n               geom_point(shape = 23, color = \"navy\", size = 2.25) +\n               labs(x = variable, y = \"Voter Turnout Rate\", title = paste(\"Voter Turnout vs\", variable)) +\n               theme_classic())\n    }\n    \n    if (input$plotType == \"Bubble Chart\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      filtered_data &lt;- if (region == \"All\") {data.short} else {data.short[data.short$Region == region, ]}\n      return(ggplot(filtered_data, aes_string(x= \"ObesityRate\", y= \"FoodEnviornmentIndex\", size = \"VoterTurnoutRate\", color = \"Region\")) +\n               geom_point(alpha=0.5, shape= 16) +\n               scale_size(range = c(.1, 11), name=\"Voter Turnout\") +\n               theme(legend.position=\"bottom\") +\n               ylab(\"Food Environment Index\") +\n               xlab(\"Obesity Rate\") +\n               theme_bw() +\n               theme(axis.line = element_line(colour = \"black\"),\n                     panel.grid.minor = element_blank(),\n                     panel.border = element_blank(),\n                     panel.background = element_blank()))\n      }\n  })\n}"
  },
  {
    "objectID": "assignment5.html",
    "href": "assignment5.html",
    "title": "Assignment 5",
    "section": "",
    "text": "library(tidyverse)\n\n# Cleaning Data\nsetwd(\"E:/Fall 2024 (Semester 7)/EPPS 6356/Assignment 4\")\ndata &lt;- read.csv(\"DV_ProjectData.csv\")\ndata.tx &lt;- data %&gt;%\n  filter(State == \"TX\" & CountyName != \"Texas\")\ndata.selectedstates &lt;- data %&gt;%\n  filter(CountyName == \"Texas\" | CountyName == \"New York\" | CountyName == \"California\" |\n           CountyName == \"Florida\" | CountyName == \"Wisconsin\" | CountyName == \"Montana\")\n\n# Histogram\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9, mar=c(4,4,3.5,2))\n\nhist(data.tx$FoodEnviornmentIndex, breaks=9, col=\"forestgreen\", border=\"gold1\",\n     main=\"Food Enviornment Index Scores Frequency for Texas Counties\", cex.main=1.5,\n     axes=FALSE, xlab=\" \", ylab=\" \")\naxis(1, at=0:8)\naxis(2, at=c(0, 15, 30, 45, 60, 75, 90))\nbox(bty=\"l\")\nabline(h=90, col=\"white\", lty=\"longdash\", lwd=2)\nabline(h=33, col=\"gray90\", lty=\"dashed\", lwd=2)\ntext(x=2, y=33, labels=\"y = 33\", pos=3, col=\"gray20\", cex=1.1)\nmtext(\"FEI Score\", side=1, line=2.5, cex=1.2)\nmtext(\"# of Counties\", side=2, line=2.5, cex=1.2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\nbarcolors &lt;- ifelse(data.selectedstates$CountyName == \"Texas\", \"forestgreen\", \"springgreen3\")\nbarborders &lt;- ifelse(data.selectedstates$CountyName == \"Texas\", \"gold1\", \"darkgreen\")\n\nbarplot(data.selectedstates$FoodEnviornmentIndex, space=0.15, axes=FALSE, col=barcolors, \n        border=barborders, main=\"Average Food Environment Index Score for Selected States\",\n        cex.main=1.5, names.arg=data.selectedstates$CountyName, cex.names=1.1)\naxis(2, at=c(0, 2, 4, 6, 8, 9))\nabline(h=6, col=\"white\", lty=\"longdash\", lwd=2)\nbox(bty=\"u\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mar=c(2.5,3,6,2))\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\nbarplot(data.selectedstates$FoodEnviornmentIndex, space=0.25, axes=FALSE, col=barcolors, \n        border=barborders, names.arg=data.selectedstates$State, horiz=TRUE)\naxis(1, at=c(0, 2, 4, 6, 8, 9))\naxis(3, at=c(0, 2, 4, 6, 8, 9))\nmtext(\"Average Food Environment Index Score for Selected States\", side=3, line=4.5, cex=1.5,\n      font=2)\nmtext(\"FEI Score\", side=3, line=2.25, cex=1.1)\nbox(bty=\"]\")\n\n\n\n\n\n\n\n\n\n\n\n\n\npiedataCA &lt;- c(data.selectedstates$VoterTurnoutRate[1], 1 - data.selectedstates$VoterTurnoutRate[1])\npiedataFL &lt;- c(data.selectedstates$VoterTurnoutRate[2], 1 - data.selectedstates$VoterTurnoutRate[2])\npiedataTX &lt;- c(data.selectedstates$VoterTurnoutRate[5], 1 - data.selectedstates$VoterTurnoutRate[5])\npiedataNY &lt;- c(data.selectedstates$VoterTurnoutRate[4], 1 - data.selectedstates$VoterTurnoutRate[4])\n\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\npar(mfrow=c(2, 2), mar=c(1, 1, 1, 1))\npie(piedataCA, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"Califnornia Voter Turnout\", cex.main=1.3)\npie(piedataNY, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"New York Voter Turnout\", cex.main=1.3)\npie(piedataTX, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"Texas Voter Turnout\", cex.main=1.3)\npie(piedataFL, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"Florida Voter Turnout\", cex.main=1.3)\n\npar(mfrow=c(1, 1))\nlegend(\"center\", legend=c(\"Turnout\", \"Non-Turnout\"), \n       fill=c(\"firebrick1\", \"mediumblue\"))\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(readxl)\nsetwd(\"E:/Fall 2024 (Semester 7)/EPPS 6356/Assignment 5\")\nKey &lt;- read_excel(\"County Regions Key.xlsx\") #County Regions defined with help from Copilot AI\ndata.tx &lt;- data.tx %&gt;%\n  mutate(Region = with(Key, region[match(CountyName, county)]))\n\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\npar(mar=c(2.5, 4, 3.5, 1))\nboxplot(data.tx$VoterTurnoutRate ~ data.tx$Region, data.tx,\n        boxwex = 0.7, col=\"turquoise1\", main=\"Voter Turnout in Texas Counties by Region\", \n        names = c(\"Central TX\", \"East TX\", \"North TX\", \"South TX\", \"Panhandle\", \n                  \"Upper Gulf\", \"West TX\"), cex.main=1.5, xlab=\"\", ylab=\"Voter Turnout Rate\", \n        pch=23, bg=\"turquoise1\", border=\"navy\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\npar(mar=c(4,4,3.5,1))\nplot(data.tx$MedianHouseholdIncome, data.tx$VoterTurnoutRate, \n     pch=23, bg=\"turquoise1\", col=\"navy\", xlab=\"Median Household Income\", ylab=\"Voter Turnout Rate\",\n     main=\"Household Income vs Voter Turnout by Texas County\", cex.main=1.5)"
  },
  {
    "objectID": "assignment5.html#histogram",
    "href": "assignment5.html#histogram",
    "title": "Assignment 5",
    "section": "",
    "text": "library(tidyverse)\n\n# Cleaning Data\nsetwd(\"E:/Fall 2024 (Semester 7)/EPPS 6356/Assignment 4\")\ndata &lt;- read.csv(\"DV_ProjectData.csv\")\ndata.tx &lt;- data %&gt;%\n  filter(State == \"TX\" & CountyName != \"Texas\")\ndata.selectedstates &lt;- data %&gt;%\n  filter(CountyName == \"Texas\" | CountyName == \"New York\" | CountyName == \"California\" |\n           CountyName == \"Florida\" | CountyName == \"Wisconsin\" | CountyName == \"Montana\")\n\n# Histogram\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9, mar=c(4,4,3.5,2))\n\nhist(data.tx$FoodEnviornmentIndex, breaks=9, col=\"forestgreen\", border=\"gold1\",\n     main=\"Food Enviornment Index Scores Frequency for Texas Counties\", cex.main=1.5,\n     axes=FALSE, xlab=\" \", ylab=\" \")\naxis(1, at=0:8)\naxis(2, at=c(0, 15, 30, 45, 60, 75, 90))\nbox(bty=\"l\")\nabline(h=90, col=\"white\", lty=\"longdash\", lwd=2)\nabline(h=33, col=\"gray90\", lty=\"dashed\", lwd=2)\ntext(x=2, y=33, labels=\"y = 33\", pos=3, col=\"gray20\", cex=1.1)\nmtext(\"FEI Score\", side=1, line=2.5, cex=1.2)\nmtext(\"# of Counties\", side=2, line=2.5, cex=1.2)"
  },
  {
    "objectID": "assignment5.html#bar-chart",
    "href": "assignment5.html#bar-chart",
    "title": "Assignment 5",
    "section": "",
    "text": "par(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\nbarcolors &lt;- ifelse(data.selectedstates$CountyName == \"Texas\", \"forestgreen\", \"springgreen3\")\nbarborders &lt;- ifelse(data.selectedstates$CountyName == \"Texas\", \"gold1\", \"darkgreen\")\n\nbarplot(data.selectedstates$FoodEnviornmentIndex, space=0.15, axes=FALSE, col=barcolors, \n        border=barborders, main=\"Average Food Environment Index Score for Selected States\",\n        cex.main=1.5, names.arg=data.selectedstates$CountyName, cex.names=1.1)\naxis(2, at=c(0, 2, 4, 6, 8, 9))\nabline(h=6, col=\"white\", lty=\"longdash\", lwd=2)\nbox(bty=\"u\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mar=c(2.5,3,6,2))\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\nbarplot(data.selectedstates$FoodEnviornmentIndex, space=0.25, axes=FALSE, col=barcolors, \n        border=barborders, names.arg=data.selectedstates$State, horiz=TRUE)\naxis(1, at=c(0, 2, 4, 6, 8, 9))\naxis(3, at=c(0, 2, 4, 6, 8, 9))\nmtext(\"Average Food Environment Index Score for Selected States\", side=3, line=4.5, cex=1.5,\n      font=2)\nmtext(\"FEI Score\", side=3, line=2.25, cex=1.1)\nbox(bty=\"]\")"
  },
  {
    "objectID": "assignment5.html#pie-chart",
    "href": "assignment5.html#pie-chart",
    "title": "Assignment 5",
    "section": "",
    "text": "piedataCA &lt;- c(data.selectedstates$VoterTurnoutRate[1], 1 - data.selectedstates$VoterTurnoutRate[1])\npiedataFL &lt;- c(data.selectedstates$VoterTurnoutRate[2], 1 - data.selectedstates$VoterTurnoutRate[2])\npiedataTX &lt;- c(data.selectedstates$VoterTurnoutRate[5], 1 - data.selectedstates$VoterTurnoutRate[5])\npiedataNY &lt;- c(data.selectedstates$VoterTurnoutRate[4], 1 - data.selectedstates$VoterTurnoutRate[4])\n\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\npar(mfrow=c(2, 2), mar=c(1, 1, 1, 1))\npie(piedataCA, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"Califnornia Voter Turnout\", cex.main=1.3)\npie(piedataNY, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"New York Voter Turnout\", cex.main=1.3)\npie(piedataTX, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"Texas Voter Turnout\", cex.main=1.3)\npie(piedataFL, col = c(\"firebrick1\", \"mediumblue\"), labels = NA, clockwise = TRUE,\n    main=\"Florida Voter Turnout\", cex.main=1.3)\n\npar(mfrow=c(1, 1))\nlegend(\"center\", legend=c(\"Turnout\", \"Non-Turnout\"), \n       fill=c(\"firebrick1\", \"mediumblue\"))"
  },
  {
    "objectID": "assignment5.html#box-plot",
    "href": "assignment5.html#box-plot",
    "title": "Assignment 5",
    "section": "",
    "text": "library(readxl)\nsetwd(\"E:/Fall 2024 (Semester 7)/EPPS 6356/Assignment 5\")\nKey &lt;- read_excel(\"County Regions Key.xlsx\") #County Regions defined with help from Copilot AI\ndata.tx &lt;- data.tx %&gt;%\n  mutate(Region = with(Key, region[match(CountyName, county)]))\n\npar(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\npar(mar=c(2.5, 4, 3.5, 1))\nboxplot(data.tx$VoterTurnoutRate ~ data.tx$Region, data.tx,\n        boxwex = 0.7, col=\"turquoise1\", main=\"Voter Turnout in Texas Counties by Region\", \n        names = c(\"Central TX\", \"East TX\", \"North TX\", \"South TX\", \"Panhandle\", \n                  \"Upper Gulf\", \"West TX\"), cex.main=1.5, xlab=\"\", ylab=\"Voter Turnout Rate\", \n        pch=23, bg=\"turquoise1\", border=\"navy\")"
  },
  {
    "objectID": "assignment5.html#scatter-plot",
    "href": "assignment5.html#scatter-plot",
    "title": "Assignment 5",
    "section": "",
    "text": "par(bg=\"gray70\", fg=\"black\", family=\"serif\", cex=0.9)\npar(mar=c(4,4,3.5,1))\nplot(data.tx$MedianHouseholdIncome, data.tx$VoterTurnoutRate, \n     pch=23, bg=\"turquoise1\", col=\"navy\", xlab=\"Median Household Income\", ylab=\"Voter Turnout Rate\",\n     main=\"Household Income vs Voter Turnout by Texas County\", cex.main=1.5)"
  },
  {
    "objectID": "assignment5.html#histogram-1",
    "href": "assignment5.html#histogram-1",
    "title": "Assignment 5",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(data.tx, aes(x=FoodEnviornmentIndex)) + \n  geom_histogram(binwidth=1, fill=\"forestgreen\", color=\"gold1\") +\n  labs(x=\"Food Enviornment Index\", y=\"# of Counties\", \n       title=\"Food Enviornment Index Scores Frequency for Texas Counties\") + \n  theme_classic(base_family = \"serif\") + \n  theme(plot.background = element_rect(fill = \"gray70\"), \n        panel.background = element_rect(fill = \"gray70\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 15)) + \n  scale_x_continuous(breaks=seq(0, 9, by=1)) + scale_y_continuous(breaks=seq(0, 90, by=15))"
  },
  {
    "objectID": "assignment5.html#bar-chart-1",
    "href": "assignment5.html#bar-chart-1",
    "title": "Assignment 5",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nVertical Bars\n\nggplot(data.selectedstates, aes(x=CountyName, y=FoodEnviornmentIndex)) +\n  geom_bar(stat=\"identity\", fill=barcolors, color=barborders) +\n  labs(x=\"\", y=\"FEI Score\", title=\"Average Food Environment Index Score for Selected States\") +\n  theme_classic(base_family = \"serif\") + \n  theme(panel.background = element_rect(fill = \"gray70\"),\n        plot.background = element_rect(fill = \"gray70\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 16)) + \n  scale_y_continuous(breaks=seq(0, 9, by=1))\n\n\n\n\n\n\n\n\n\n\nHorizontal\n\nggplot(data.selectedstates, aes(x=CountyName, y=FoodEnviornmentIndex)) +\n  geom_bar(stat=\"identity\", fill=barcolors, color=barborders) +\n  labs(x=\"\", y=\"FEI Score\", title=\"Average Food Environment Index Score for Selected States\") +\n  theme_classic(base_family = \"serif\") + \n  theme(panel.background = element_rect(fill = \"gray70\"),\n        plot.background = element_rect(fill = \"gray70\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 15)) + \n  scale_y_continuous(breaks=seq(0, 9, by=1)) + \n  coord_flip()"
  },
  {
    "objectID": "assignment5.html#pie-chart-1",
    "href": "assignment5.html#pie-chart-1",
    "title": "Assignment 5",
    "section": "Pie Chart",
    "text": "Pie Chart\n\nggplot(, aes(x=\"\", y=piedataTX, fill = c(\"Turnout\", \"Non-Turnout\"))) +\n  geom_bar(stat=\"identity\") + coord_polar(theta=\"y\") + \n  labs(title=\"Texas Voter Turnout\", fill = \"Turnout\") +\n  scale_fill_manual(values=c(\"Turnout\"=\"firebrick1\", \"Non-Turnout\"=\"mediumblue\")) +\n  theme_void(base_family = \"serif\") +\n  theme(plot.title = element_text(size=18, hjust=0.5, face=\"bold\"), \n        plot.background = element_rect(fill = \"gray70\"))"
  },
  {
    "objectID": "assignment5.html#box-plot-1",
    "href": "assignment5.html#box-plot-1",
    "title": "Assignment 5",
    "section": "Box Plot",
    "text": "Box Plot\n\nggplot(data.tx, aes(Region, VoterTurnoutRate)) +\n  geom_boxplot(fill = \"turquoise1\", outlier.color = \"navy\", outlier.fill = \"turquoise1\",\n               outlier.shape=23, outlier.size=2.25, staplewidth=0.5) + \n  labs(title=\"Voter Turnout of Texas Counties by Region\") + xlab(\"\") + ylab(\"Voter Turnout Rate\") + \n  theme_classic(base_family = \"serif\") +\n  theme(panel.background = element_rect(fill = \"gray70\"),\n        plot.background = element_rect(fill = \"gray70\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 18),\n        axis.text.x = element_text(angle=25, hjust=1, size=11),\n        axis.text.y = element_text(size=11)) + \n  scale_y_continuous(breaks=seq(0.4, 1.0, by=0.1))"
  },
  {
    "objectID": "assignment5.html#scatter-plot-1",
    "href": "assignment5.html#scatter-plot-1",
    "title": "Assignment 5",
    "section": "Scatter Plot",
    "text": "Scatter Plot\n\nggplot(data.tx, aes(MedianHouseholdIncome, VoterTurnoutRate)) + \n  geom_point(shape = 23, color = \"navy\", fill = \"turquoise1\", size = 2.25) + \n  theme_classic(base_family = \"serif\") + \n  labs(title=\"Household Income vs Voter Turnout by Texas County\") + \n  theme(plot.background = element_rect(fill = \"gray70\"), \n        panel.background = element_rect(fill = \"gray70\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 18)) + \n  scale_x_continuous(breaks=seq(35000, 125000, by=15000)) + \n  scale_y_continuous(breaks=seq(0.4, 1.0, by=0.1))"
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "Return Home\n\nPart 1\n\n#Sets a random vector of 50 random numbers in a normal distribution\nY &lt;- rnorm(50) \n#Every number in Y vector that is above 3.5 or below -3.5 is replaced with NA\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA \n#Sets variable x as the sequence of numbers between -3.5 and 3.5 by increments of 0.1\nx &lt;- seq(-3.5, 3.5, .1)\n#Sets variable dn, which uses the x variable in dnorm() function to make a normal distribution\ndn &lt;- dnorm(x)\n#Sets parameters for the plot. Margins on bottom, left, top, and right as 4.5, \n  # 4.1, 3.1, and 0 lines respectively\npar(mar=c(4.5, 4.1, 3.1, 0))\n#Creates a histogram using Y for the variable, sets bars for histograms as the default between \n  # numbers -3.5 and 3.5, sets the upper limit for the y-axis as 0.5, sets color for \n  # the bars as gray80, histogram also shows probability density rather than counts\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), col=\"gray80\", freq=FALSE)\n#Creates a line with a width of 2, within the bounds of the x variable in a normal distribution\nlines(x, dnorm(x), lwd=2)\n\n\n\n\n\n\n\n#Sets new parameters for the margins of the plot\npar(mar=c(5.1, 4.1, 4.1, 2.1)) \n\n\n\nPart 2\n\nplot.new()\ndata(anscombe)\nplot(anscombe$x1,anscombe$y1)\n\n\n\n\n\n\n\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))}\nsapply(mods, coef)  # Note the use of this function\nlapply(mods, function(fm) coef(summary(fm)))\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0)) \n\n#CHANGING COLOR to darkred, LINE TYPES to longdash and COLOR mediumblue,\n  # CHARACTERS to 17 type, and CEX to 1.3\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"darkred\", pch = 17, cex = 1.3,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"mediumblue\", lty=\"longdash\")}\nmtext(\"Chantan's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\n\n\npar(op)\n\n\n\nPart 3\n\nplot.new()\npar(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0), \n    bg=\"gray70\") #Added a gray70 background so lighter colors can be seen better\n\n#CHANGING COLOR to gold1, BG to turquoise1, LINE COLOR to firebrick1, AND CHARACTERS to 23\n  # and CHANGING FONT to serif for the plots\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, family=\"serif\", col = \"gold1\", pch = 23, bg = \"turquoise1\", \n       cex = 1.5, xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"firebrick1\", lty=\"longdash\")}\n#CHANGING FONT to serif for the title\nmtext(\"Chantan's 4 Regression data sets\", family=\"serif\", outer = TRUE, cex = 1.5)\n\n\n\n\n\n\n\n\n\n\nPart 4\n\nlibrary(tidyverse)\n\nggplot(anscombe, aes(x1,y1)) + \n  geom_point(shape = 23, color = \"gold1\", fill = \"turquoise1\", size = 4) + \n  geom_smooth(method = \"lm\", color = \"firebrick1\", linetype = \"longdash\", se = FALSE) + \n  theme_classic(base_family = \"serif\") + \n  labs(title=\"Chantan's Regession data set\") + \n  theme(plot.background = element_rect(fill = \"gray70\"), \n        panel.background = element_rect(fill = \"gray70\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20))"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Return Home\n\nLeaf of Winter\nRe-coloring of Leaf of Fall with lightblue\n\n\n\nLeaf of Winter\n\n\n\n\nGraphic Critique\nThe Council on Criminal Justice is an alleged non-partisan organization that publishes crime statistics in order to better policy and policymakers’ decisions on how to deal with Criminal Justice issues.\nThe following graphic was taken from their Homicide Trends Report published in December 2023.\n\n\n\nCCJ: Homicide Victimizations by Race and Sex\n\n\nThe first thing the reader will notice when looking at the graphic on the CCJ website is that the graphic is too large to be seen on the screen in its entirety without scrolling. There is an option to make the graphic full screen, but that brings to light the second issue: the graphic has no title connected to it. The only title the graphic receives is a flush-left, bolded text that is hardly differentiated from the regular text in the article. Compared to the size of the graphic, the title is hardly there.\nThirdly, the colors are poorly chosen. Yellow stands out too little against the white background, and it does not help that it is the smallest bar in the graph. Furthermore, “White Males” is shown by by a purple-ish, nearly black, color compared to the much lighter blue used for “Black Males”. This may cause confusion, as when one thinks of “Black”, they may instinctively look at a darker bar (like with a graph sorted by sex using pink and blue, the reader may instinctively believe the pink means women and blue means male).\nLast, but not least, the legend is not used in available white space within the graphic. On the top-right of the graphic, above the last four or five groups, there is plenty of space to put a legend explaining what the colors of the bars represent. It would make the whole graphic smaller and easier to read."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Return Home\n\nHappy Planet Plots\n\n\n\n\n\n\n\n\n\n\nPerspective Plot with example data\n\n\n\n\n\n\n\n\n\n\n\n\nOne-Page Note\nBased on information from Lazer, Kennedy, King, & Vespignani (2014). The Parable of Google Flu: Traps in Big Data Analysis\nAccording to Ginsberg, Mohebbi, Patel, et al (2009), the frequency of certain Google search queries is highly correlated with the percentage of physician visits where the patient arrives with flu-like symptoms. This means that it is possible to accurately estimate the amount of influenza activity in the US using the amount of influenza-related search queries. The usual time it takes to respond to outbreaks is 1-2 week with the current surveillance systems. Using Google search queries can cut response time to a day. However, in February 2013, Google Flu Trends was predicting twice the amount of doctor visits for influenza-like illness.\nBig Data Hubris is the assumption that big data are a substitute for traditional data collection analysis, rather than a supplement to it. But more data does not make it more reliable or valid for scientific analysis. GFT was supposed to find the best matches among 50 million search terms to fit 1152 data points (overparameterization), which led to terms related to the CDC but not to the flu being gathered into the estimates. This led to GFT being able to run will on the original data, but not so much on the new data with new searches later on (overfitting). GFT began to constantly overestimate flu prevalence and miss spikes in actual flu cases. This could have been avoided if GFT was used along with more accurate CDC data on a two-week time lag. GFT could then correct itself with the newest CDC data to make more accurate predictions in the future. The inaccuracies, however, may have been on Google’s end, due to their ever-changing search engine, specifically their change to show recommended searches.\nTransparency and replicability is necessary in research. GFT failed to provide the 45 search terms used to make its estimates, so others who want to build or check these methods are left guessing. GFT could also do so much good if it is perfected, giving accurate predictions of the flu week or months ahead of time. Thus, big data analysis should work together with traditional applied statistics to provide a better understanding of reality."
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "Return Home"
  },
  {
    "objectID": "assignment4.html#graph-1-chantan",
    "href": "assignment4.html#graph-1-chantan",
    "title": "Assignment 4",
    "section": "Graph 1 (Chantan)",
    "text": "Graph 1 (Chantan)\n\nbluecolorramp &lt;- colorRampPalette(c(\"skyblue\", \"mediumblue\"))(length(state_means_filtered$MedianHouseholdIncome))\ncolors &lt;- bluecolorramp[rank(state_means_filtered$MedianHouseholdIncome)]\n\npar(family=\"serif\", cex=0.9, mar=c(3, 3.5, 3, 1))\nbarplot(state_means_filtered$VoterTurnoutRate, width=state_means_filtered$MedianHouseholdIncome, space=0, \n        col=colors, ylim=c(0,0.8), names.arg=state_means_filtered$State)\ntitle(main=\"Voter Turnout vs Median Household Income\", cex.main=1.5)\nmtext(\"Voter Turnout Rate\", , side=2, line=2.2, cex=1.1)\nbox(bty=\"l\")\nlegend(\"topright\", legend = c(\"Low Income\", \"High Income\"), fill = c(\"skyblue\", \"mediumblue\"), \n       title = \"Income Level\")"
  },
  {
    "objectID": "assignment4.html#graph-2-daniel",
    "href": "assignment4.html#graph-2-daniel",
    "title": "Assignment 4",
    "section": "Graph 2 (Daniel)",
    "text": "Graph 2 (Daniel)\n\nreduceddata &lt;- data%&gt;%\n  filter(State == \"CA\"| State==\"AR\"|State ==\"TX\" | State == \"OK\"|State ==\"NJ\")\n\nggplot(data = reduceddata,aes(x=VoterTurnoutRate, color = State))+\n  geom_density()+\n  scale_color_brewer(palette = \"Dark2\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        text = element_text(family = \"serif\"))+\n  facet_wrap(~State)"
  },
  {
    "objectID": "assignment4.html#graph-3-ahana",
    "href": "assignment4.html#graph-3-ahana",
    "title": "Assignment 4",
    "section": "Graph 3 (Ahana)",
    "text": "Graph 3 (Ahana)\n\nggplot(state_means_filtered, aes(x = reorder(State, VoterTurnoutRate), y = VoterTurnoutRate, fill= \"forestgreen\")) + \n  geom_col(show.legend=FALSE) + \n  labs(title = \"Voter Turnout Rate by State\", x = \"State\", y = \"Voter Turnout Rate\") + \n  theme_classic() +\n  theme(text = element_text(family = \"serif\")) +\n  coord_flip()"
  },
  {
    "objectID": "assignment4.html#graph-4-abhishek",
    "href": "assignment4.html#graph-4-abhishek",
    "title": "Assignment 4",
    "section": "Graph 4 (Abhishek)",
    "text": "Graph 4 (Abhishek)\n\n# Cleaning Data to Include DFW Counties\ndfw_counties &lt;- c(\"Collin County\", \"Dallas County\", \"Denton County\", \"Ellis County\", \n                  \"Hunt County\", \"Kaufman County\", \"Rockwall County\", \n                  \"Johnson County\", \"Parker County\", \"Tarrant County\", \"Wise County\")\n\ndfw_data &lt;- subset(data, CountyName %in% dfw_counties)\n\n# Convert the data from wide to long format\ndfw_data_long &lt;- dfw_data %&gt;%\n  pivot_longer(cols = c(\"HSCompletion\", \"SomeCollegeEducation\"), \n               names_to = \"EducationLevel\", \n               values_to = \"Percentage\")\n\n# Create the column chart\nggplot(dfw_data_long, aes(x = CountyName, y = Percentage * 100, fill = EducationLevel)) + \n  geom_bar(stat = 'identity', position = 'dodge') + \n  labs(title = 'High School Completion vs Some College Education in DFW Metropolis ',\n       x = 'County Name', y = 'Percentage (%)') + \n  scale_fill_manual(name = 'Education Level', \n                    values = c('HSCompletion' = 'steelblue', 'SomeCollegeEducation' = 'forestgreen')) + \n  theme_minimal() + \n  theme(text = element_text(family = \"serif\"),\n        axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))"
  },
  {
    "objectID": "assignment6.html",
    "href": "assignment6.html",
    "title": "Assignment 6",
    "section": "",
    "text": "Return Home\n\nAssignment 6 -c-\n\n\n\n\nAssignment 6 -d-"
  },
  {
    "objectID": "assignment8.html",
    "href": "assignment8.html",
    "title": "Assignment 8",
    "section": "",
    "text": "This is also the Final Project .Rmd dashboard\nLink to RMD Dashboard"
  },
  {
    "objectID": "assignment8.html#code",
    "href": "assignment8.html#code",
    "title": "Assignment 8",
    "section": "Code",
    "text": "Code\n\n### Packages and Data Cleaning\n#install.packages(\"shiny\")\n#install.packages(\"rmarkdown\")\nlibrary(plotly)\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(rmarkdown)\nlibrary(tidyverse)\nlibrary(ggridges)\nlibrary(GGally)\nlibrary(RColorBrewer)\nlibrary(viridis)\nlibrary(extrafont)\nlibrary(waffle)\nlibrary(ggpubr)\nloadfonts(device = \"win\")\n\ndat &lt;- read.csv(\"analytic_data2024.csv\")\n\n# Download County Regions Key\nkey &lt;- read_excel(\"County Regions Key.xlsx\")\n\n# Filtering Data to only variables and counties needed\ndata_short &lt;- dat[, c(3,4,5,681,536,210,200,205,39,44,49,86,91,437,442,96,711)]\ncolnames(data_short) &lt;- c(\"CountyFIPS\", \"State\", \"CountyName\", \"VoterTurnoutRate\", \"MedianHouseholdIncome\", \n                          \"UnemploymentRate\", \"HSCompletion\", \"SomeCollegeEducation\", \"PoorOrFairHealth\", \n                          \"AvgPoorPhysHealthDays\", \"AvgPoorMentalHealthDays\", \"ObesityRate\", \n                          \"FoodEnviornmentIndex\", \"FoodInsecurity\", \"LimitedAccesstoHealthyFoods\",\n                          \"PhysInactivityRate\", \"Population\")\ndata.tx &lt;- data_short %&gt;%\n  filter(State == \"TX\" & CountyName != \"Texas\")\n\n# Making new variable to give every county a region using Key\ndata.tx &lt;- data.tx %&gt;%\n  mutate(Region = with(key, region[match(CountyName, county)]))\n\n# Setting number columns to numeric (needed for GIS mapping)\ndata.tx[4:17] &lt;- lapply(data.tx[4:17], as.numeric)\n\n# Filtering Odd data\ndata.tx.filter &lt;- data.tx %&gt;%\n  filter(complete.cases(.)) %&gt;% \n  filter(VoterTurnoutRate &lt;= .90, SomeCollegeEducation &lt;= 0.95, FoodEnviornmentIndex &gt;= 0.5, \n         LimitedAccesstoHealthyFoods &gt;= 0.001)\n\nremoved.data &lt;- anti_join(data.tx, data.tx.filter, by = names(data.tx))\nremoved.data[, -1] &lt;- NA\ndata.tx.filter &lt;- bind_rows(data.tx.filter, removed.data)\n# Left with 246 Counties in Texas that have complete and reliable data\n\n# Writing new CSV for data analysis\n#write.csv(data.tx, \"CleanProjectData.csv\")\n\ndata &lt;- read.csv(\"CleanProjectData.csv\")\nregion_choices &lt;- c(\"All\", data$Region)\nregion_colors &lt;- c(\"The Panhandle\" = \"#a82eff\", \"West Texas\" = \"#02d914\", \n                   \"Upper Gulf Coast\" = \"#00f7ff\", \"South Texas\" = \"#ff0400\",\n                   \"North Texas\" = \"#030ffc\", \"East Texas\" = \"#ff40df\", \n                   \"Central Texas\" = \"#ff8f17\")\nregion_colors2 &lt;- c(\"Panhandle\" = \"#a82eff\", \"West Texas\" = \"#02d914\", \n                   \"U.Gulf Coast\" = \"#00c3c9\", \"South Texas\" = \"#ff0400\",\n                   \"North Texas\" = \"#030ffc\", \"East Texas\" = \"#ff40df\", \n                   \"Central Texas\" = \"#ff8f17\")\n\n### Ridges Plot\ndata %&gt;%\n  ggplot(aes(x=VoterTurnoutRate, y = Region, fill = Region))+\n  geom_density_ridges() +\n  theme_ridges() + \n  scale_fill_brewer(viridis)+\n  theme(legend.position = \"none\")+\n  labs(x = \"Voter Turnout Rate\", y = \"\")+\n  theme(text = element_text(family = \"Rockwell\"))\n\n### Scatterplot Matrix\n\npanel.hist &lt;- function(x, ...){\n  usr &lt;- par(\"usr\"); on.exit(par(usr))\n  par(usr = c(usr[1:2], 0, 1.5) )\n  h &lt;- hist(x, plot = FALSE)\n  breaks &lt;- h$breaks\n  len &lt;- length(breaks)\n  y &lt;- h$counts/max(h$counts)\n  rect(breaks[-len], 0, breaks[-1], y, col = \"#17BEBB\")\n}\n\npar(family = \"Rockwell\")\ndata%&gt;%\n  mutate(MedHouseIncome = log(MedianHouseholdIncome),\n         HealthyFood = LimitedAccesstoHealthyFoods,\n         Unemployment = UnemploymentRate)%&gt;%\n  #MedHouseIncome, Unemployment, HSCompletion, \n  select(PoorOrFairHealth, AvgPoorMentalHealthDays, AvgPoorMentalHealthDays, ObesityRate, HealthyFood, PhysInactivityRate, FoodInsecurity)%&gt;%\n  plot(\n    family = \"Rockwell\",\n    pch=19,\n    cex=0.8,\n    lower.panel = panel.smooth,\n    diag.panel = panel.hist,\n    col=\"#0E7C7B\",\n    #\"Income\", \"Unemployment\", \"HS\", \n    labels = c(\"PoorHealth\", \"PoorMentalDays\", \"PoorPhysDays\", \"Obesity\", \"Unhealthy Food\", \"Inactivity\", \"Food Insecurity\", \"Region\"),\n    gap = 0.3,\n    upper.panel = NULL,\n    main = \"Scatterplot Matrix of Health Variables\")\ndev.off()\n\n### Bar-Box Plot\nb &lt;- data%&gt;%\n  mutate(Region = ifelse(Region == \"The Panhandle\", \"Panhandle\",\n                         ifelse(Region == \"Upper Gulf Coast\", \"U.Gulf Coast\", Region))) %&gt;%\n  ggbarplot(\n    x = \"Region\", y = \"FoodEnviornmentIndex\",\n    color = \"Region\",\n    add = c(\"median\", \"boxplot\", \"jitter\"), \n    add.params = list(width = 0.3),\n    position = position_dodge(0.8),\n    size = 1.2) +\n  labs(y = \"Food Enviornment Index\", x = \"\") +\n  scale_color_manual(values = region_colors2) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        text = element_text(family = \"Rockwell\"),\n        panel.background = element_rect(fill = \"gray90\", color = NA))\n  \n\nggplotly(b) %&gt;% \n  layout(legend = list(x = 0.75, y = 1))\n\n### Waffle Plot\ndata%&gt;%\n  mutate(nonbinaryindex = ifelse(FoodEnviornmentIndex &gt;= 0.5, \"High Food\", \"Low Food\"),\n         rd = floor(FoodEnviornmentIndex),\n         ct = 1)%&gt;%\n  group_by(rd,Region,nonbinaryindex)%&gt;%\n  summarize(n=sum(ct))%&gt;%\n  ggplot(aes(values = n, fill = Region))+\n  geom_waffle(\n    n_rows = 6,\n    color = \"white\",\n    na.rm =TRUE\n  )+\n  scale_fill_manual(values = region_colors)+\n  theme_minimal()+\n  ggtitle(\"Food Enviroment Index District Count\")+\n  theme(legend.position = \"bottom\",\n        text = element_text(family = \"Rockwell\"))+\n  scale_x_discrete()+\n  scale_y_discrete()+\n  facet_wrap(~rd)+\n  coord_equal()\n\n### Scatterplots of Most Significant Findings\nui &lt;- fluidPage(\n  tags$style(HTML(\"\n    body {\n      background-color: #b3b3b3;\n      color: black;\n    }\n    \n    .shiny-input-container {\n      color: black;\n    }\"\n  )),\n  \n  titlePanel(\"Scatterplots\"), \n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"plotType\", \"Choose Variable:\", \n                  choices = c(\"Obesity Rate\", \"Food Insecurity\", \n                              \"Average Poor Physical Health Days\", \n                              \"Poor or Fair Health\",\n                              \"Physical Inactivity Rate\",\n                              \"Average Poor Mental Health Days (X)\"), \n                  selected = \"Obesity Rate\"),\n      uiOutput(\"variable_ui\"),\n    ), \n    \n    mainPanel(\n      plotOutput(\"distPlot\")\n    )\n  )\n)\n\n\nserver &lt;- function(input, output) {\n  output$variable_ui &lt;- renderUI({\n    switch(input$plotType,\n           \"Obesity Rate\" = selectInput(\"txregion\", \"Select Region:\", \n                                        choices = region_choices),\n           \"Food Insecurity\" = selectInput(\"txregion\", \"Select Region:\", \n                                           choices = region_choices),\n           \"Average Poor Physical Health Days\" = selectInput(\"txregion\", \n                                               \"Select Region:\", choices = region_choices),\n           \"Poor or Fair Health\" = selectInput(\"txregion\", \"Select Region:\", \n                                           choices = region_choices),\n           \"Physical Inactivity Rate\" = selectInput(\"txregion\", \"Select Region:\", \n                                           choices = region_choices),\n           \"Average Poor Mental Health Days (X)\" = selectInput(\"txregion\", \n                                               \"Select Region:\", choices = region_choices),\n           )\n    })\n  \n  output$distPlot &lt;- renderPlot({\n    req(input$plotType)\n    \n  if (input$plotType == \"Obesity Rate\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      data &lt;- if (region == \"All\") {data\n        } else {data[data$Region == region, ]}\n      plot &lt;- ggplot(data, aes_string(x = \"ObesityRate\", y = \"VoterTurnoutRate\", \n                                     fill = \"Region\")) +\n               geom_point(shape = 23, size = 3) + \n               scale_fill_manual(values = region_colors) + \n               labs(x = \"Obesity Rate\", y = \"Voter Turnout Rate\") + \n               theme_minimal() +\n               theme(text = element_text(family = \"Rockwell\"))\n             if (region == \"All\") {\n               plot &lt;- plot + geom_smooth(aes_string(group = 1), method = \"lm\", \n                                          col = \"#00241B\", alpha = 0.15)\n             } else {\n                 plot &lt;- plot + geom_smooth(method = \"lm\", col = \"#00241B\", \n                                            alpha = 0.15, \n                                            aes_string(group = \"Region\"))\n             }\n      \n      return(plot)\n    }\n    \n  if (input$plotType == \"Food Insecurity\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      data &lt;- if (region == \"All\") {data\n        } else {data[data$Region == region, ]}\n      plot &lt;- ggplot(data, aes_string(x = \"FoodInsecurity\", y = \"VoterTurnoutRate\", \n                                     fill = \"Region\")) +\n               geom_point(shape = 23, size = 3) + \n               scale_fill_manual(values = region_colors) + \n               labs(x = \"Food Insecurity\", y = \"Voter Turnout Rate\") + \n               theme_minimal() +\n               theme(text = element_text(family = \"Rockwell\"))\n             if (region == \"All\") {\n               plot &lt;- plot + geom_smooth(aes_string(group = 1), method = \"lm\", \n                                          col = \"#00241B\", alpha = 0.15)\n             } else {\n                 plot &lt;- plot + geom_smooth(method = \"lm\", col = \"#00241B\", \n                                            alpha = 0.15, \n                                            aes_string(group = \"Region\"))\n             }\n      \n      return(plot)\n    }\n\n  if (input$plotType == \"Average Poor Physical Health Days\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      data &lt;- if (region == \"All\") {data\n        } else {data[data$Region == region, ]}\n      plot &lt;- ggplot(data, aes_string(x = \"AvgPoorPhysHealthDays\", y = \"VoterTurnoutRate\", \n                                     fill = \"Region\")) +\n               geom_point(shape = 23, size = 3) + \n               scale_fill_manual(values = region_colors) + \n               labs(x = \"Average Poor Physical Health Days\", y = \"Voter Turnout Rate\") + \n               theme_minimal() +\n               theme(text = element_text(family = \"Rockwell\"))\n             if (region == \"All\") {\n               plot &lt;- plot + geom_smooth(aes_string(group = 1), method = \"lm\", \n                                          col = \"#00241B\", alpha = 0.15)\n             } else {\n                 plot &lt;- plot + geom_smooth(method = \"lm\", col = \"#00241B\", \n                                            alpha = 0.15, \n                                            aes_string(group = \"Region\"))\n             }\n      \n      return(plot)\n    }\n    \n  if (input$plotType == \"Poor or Fair Health\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      data &lt;- if (region == \"All\") {data\n        } else {data[data$Region == region, ]}\n      plot &lt;- ggplot(data, aes_string(x = \"PoorOrFairHealth\", y = \"VoterTurnoutRate\", \n                                     fill = \"Region\")) +\n               geom_point(shape = 23, size = 3) + \n               scale_fill_manual(values = region_colors) + \n               labs(x = \"Poor or Fair Health\", y = \"Voter Turnout Rate\") + \n               theme_minimal() +\n               theme(text = element_text(family = \"Rockwell\"))\n             if (region == \"All\") {\n               plot &lt;- plot + geom_smooth(aes_string(group = 1), method = \"lm\", \n                                          col = \"#00241B\", alpha = 0.15)\n             } else {\n                 plot &lt;- plot + geom_smooth(method = \"lm\", col = \"#00241B\", \n                                            alpha = 0.15, \n                                            aes_string(group = \"Region\"))\n             }\n      \n      return(plot)\n    }\n    \n  if (input$plotType == \"Physical Inactivity Rate\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      data &lt;- if (region == \"All\") {data\n        } else {data[data$Region == region, ]}\n      plot &lt;- ggplot(data, aes_string(x = \"PhysInactivityRate\", y = \"VoterTurnoutRate\", \n                                     fill = \"Region\")) +\n               geom_point(shape = 23, size = 3) + \n               scale_fill_manual(values = region_colors) + \n               labs(x = \"Physical Inactivity Rate\", y = \"Voter Turnout Rate\") + \n               theme_minimal() +\n               theme(text = element_text(family = \"Rockwell\"))\n             if (region == \"All\") {\n               plot &lt;- plot + geom_smooth(aes_string(group = 1), method = \"lm\", \n                                          col = \"#00241B\", alpha = 0.15)\n             } else {\n                 plot &lt;- plot + geom_smooth(method = \"lm\", col = \"#00241B\", \n                                            alpha = 0.15, \n                                            aes_string(group = \"Region\"))\n             }\n      \n      return(plot)\n    }\n\n  if (input$plotType == \"Average Poor Mental Health Days (X)\" && !is.null(input$txregion)) {\n      region &lt;- input$txregion\n      data &lt;- if (region == \"All\") {data\n        } else {data[data$Region == region, ]}\n      plot &lt;- ggplot(data, aes_string(x = \"AvgPoorMentalHealthDays\", y = \"VoterTurnoutRate\",\n                                     fill = \"Region\")) +\n               geom_point(shape = 23, size = 3) + \n               scale_fill_manual(values = region_colors) + \n               labs(x = \"Average Poor Mental Health Days\", y = \"Voter Turnout Rate\") + \n               theme_minimal() +\n               theme(text = element_text(family = \"Rockwell\"))\n             if (region == \"All\") {\n               plot &lt;- plot + geom_smooth(aes_string(group = 1), method = \"lm\", \n                                          col = \"#00241B\", alpha = 0.15)\n             } else {\n                 plot &lt;- plot + geom_smooth(method = \"lm\", col = \"#00241B\", \n                                            alpha = 0.15, \n                                            aes_string(group = \"Region\"))\n             }\n      \n      return(plot)\n    }\n  })\n}\n  \nshinyApp(ui = ui, server = server)\n\n### Bubble Chart 5\np &lt;- ggplot(data, aes(x= PoorOrFairHealth, y= VoterTurnoutRate, size =log(MedianHouseholdIncome), \n                      color = Region, text = paste(\"MHI:\", MedianHouseholdIncome))) +\n  geom_point(alpha=0.5, shape= 16) +\n  scale_color_manual(values = region_colors) +\n  scale_size(range = c(.1, 11), name=\"Voter Turnout\", guide = \"none\") +\n  theme_minimal() +\n  labs(y = \"Voter Turnout Rate\", x = \"Poor or Fair Health\") +\n  theme(text = element_text(family = \"Rockwell\"))\n\n\nggplotly(p, tooltip = \"text\") %&gt;% \n  layout(legend = list(x = 0.75, y = 1))\n\n### HTML with ArcGIS API 6\n\n[ArcGIS Voter Turnout Comparisons Maps](https://chantanmorinjr.github.io/GroupProjectDataVis.html)"
  },
  {
    "objectID": "blog/test-post/index.html",
    "href": "blog/test-post/index.html",
    "title": "test blog",
    "section": "",
    "text": "THIS IS A TEST BLOG POST"
  },
  {
    "objectID": "Resume.html",
    "href": "Resume.html",
    "title": "Resume",
    "section": "",
    "text": "Resume"
  },
  {
    "objectID": "2Assignment1.html",
    "href": "2Assignment1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "One-Page Description of Website\nThis website was made using RStudio’s Quarto project. I first made it about a year ago, Fall 2024, in order to submit assignments for Dr. Ho’s Data Visualization class, and is currently being used for personal and educational purposes. The website uses the “darkly” theme and “success” background, which makes the navigation bar a bright, neon green and the main window black. I feel this is easier on the eyes.\nNext to the Home tab is the Resume tab, which holds an updated version of my resume as of Fall 2025. I used that version of the resume to apply for a job as a GIS Technician for Dallas Police Department (still waiting to hear back).\nNext to that tab is the Blog, where I posted a couple blogs needed for class. Making a Blog on Quarto as part of the website was not as easy as creating a new .qmd document and updating the .yml, but it required its own .yml and folder in order to function.\nNext to that are my dropdown boxes that lead to assignments for each of Dr. Ho’s classes I have taken so far. The first is EPPS 6356: Data Visualization. There, you will find the 8 Assignments that I posted for the class, including some for the group project I was in. Most of these assignments are about making and designing graphs in R and making ShinyApps to make dynamic and intractable graphs. I also used ArcGIS to make maps showing the results of our group project. The second is EPPS 6302: Data Collection and Production. This has yet to be filled out all the way."
  },
  {
    "objectID": "blog/09-09-25-prepareforclass2-post/index.html",
    "href": "blog/09-09-25-prepareforclass2-post/index.html",
    "title": "DataFramed Podcast Ep 318 Review",
    "section": "",
    "text": "Thoughts on DataFramed Ep. 318\nKlaus Kleinfield, former CEO at Alcoa and Siemens, talked about how to avoid burnout, managing energy usage, and other things to help people focus. He first defines burnout, not as a lack of energy necessarily but rather as coming from not being able to manage energy usage properly. This opened my eyes for a moment. I always thought something was wrong with me, that when I needed to work on something I felt too tired. I would take naps to “gain energy” but that rarely did much, and consequently I would not be very productive. However, Kleinfield understands burnout as coming from being unable to manage energy. He further specifies types of energies: Emotional, Physical, Mental, and Spiritual. Emotional energy is something that must be controlled. Emotions are responses to outside stimuli, so being able to choose what emotions come out, training yourself to be emotionally stable, are necessary tools to have in order to manage emotional energy. Physical energy is simply making sure you are healthy. Eating healthy, exercising, and the like are all things that must be done to managing physical energy. Mental energy is what allows some to focus. Managing this comes from being able to know what to focus on and when to turn one side of your brain off so that the other side can work. Knowing when and how to take breaks is the key to managing this. Finally, spiritual energy is simply believing in a higher power, religion, etc. Kleinfield says that everyone should at least try out being religion to see if it helps you in any way. Though I generally disagree with the utilitarian approach, I do agree that belief in God is a comfort and foundation that one can use to build better habits and thoughts.\nKleinfield also emphasizes the importance of having a purpose for your work. He says purpose does to energy as a laser does to light, it focuses it and makes it more powerful. You need to get to a point where you can wake up in the morning and say, “I want to use this day to get this done!” I can attest to this greatly. As an aspiring writer, I often find myself stuck on tricky dialogue or plot points. However, when I find that answer, I cannot wait to write it and find ways to pull it off. I have often had days when I jump out of bed to complete it. Kleinfield adds that this is how you should feel about work. If you don’t like your work, find ways to change it, and if you cannot change it, leave it."
  },
  {
    "objectID": "2Assignment2.html",
    "href": "2Assignment2.html",
    "title": "2Assignment2",
    "section": "",
    "text": "Trump-Harris Election Hits Google Trends"
  }
]